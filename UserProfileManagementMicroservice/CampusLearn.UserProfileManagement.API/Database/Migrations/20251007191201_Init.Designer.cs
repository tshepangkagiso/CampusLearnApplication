// <auto-generated />
using System;
using CampusLearn.UserProfileManagement.API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampusLearn.UserProfileManagement.API.Database.Migrations
{
    [DbContext(typeof(UserManagementDbContext))]
    [Migration("20251007191201_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.Login", b =>
                {
                    b.Property<int>("LoginID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastPasswordChange")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PasswordSalt")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileID")
                        .HasColumnType("int");

                    b.HasKey("LoginID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserProfileID")
                        .IsUnique();

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.Module", b =>
                {
                    b.Property<int>("ModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuleID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProgramType")
                        .HasColumnType("int");

                    b.HasKey("ModuleID");

                    b.HasIndex("ModuleCode")
                        .IsUnique();

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<int>("UserProfileID")
                        .HasColumnType("int");

                    b.HasKey("StudentID");

                    b.HasIndex("UserProfileID")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.StudentModule", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscribedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentID", "ModuleID");

                    b.HasIndex("ModuleID");

                    b.ToTable("StudentModules");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.Tutor", b =>
                {
                    b.Property<int>("TutorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TutorID"));

                    b.Property<DateTime?>("AdminSince")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("UserProfileID")
                        .HasColumnType("int");

                    b.HasKey("TutorID");

                    b.HasIndex("UserProfileID")
                        .IsUnique();

                    b.ToTable("Tutors");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.TutorModule", b =>
                {
                    b.Property<int>("TutorID")
                        .HasColumnType("int");

                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("QualifiedSince")
                        .HasColumnType("datetime2");

                    b.HasKey("TutorID", "ModuleID");

                    b.HasIndex("ModuleID");

                    b.ToTable("TutorModules");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.UserProfile", b =>
                {
                    b.Property<int>("UserProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserProfileID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qualification")
                        .HasColumnType("int");

                    b.Property<int>("StudentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("UserProfileID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("StudentNumber")
                        .IsUnique();

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.Login", b =>
                {
                    b.HasOne("CampusLearn.Library.UserManagementModels.UserProfile", "UserProfile")
                        .WithOne()
                        .HasForeignKey("CampusLearn.Library.UserManagementModels.Login", "UserProfileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.Student", b =>
                {
                    b.HasOne("CampusLearn.Library.UserManagementModels.UserProfile", "UserProfile")
                        .WithOne()
                        .HasForeignKey("CampusLearn.Library.UserManagementModels.Student", "UserProfileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.StudentModule", b =>
                {
                    b.HasOne("CampusLearn.Library.UserManagementModels.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusLearn.Library.UserManagementModels.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.Tutor", b =>
                {
                    b.HasOne("CampusLearn.Library.UserManagementModels.UserProfile", "UserProfile")
                        .WithOne()
                        .HasForeignKey("CampusLearn.Library.UserManagementModels.Tutor", "UserProfileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("CampusLearn.Library.UserManagementModels.TutorModule", b =>
                {
                    b.HasOne("CampusLearn.Library.UserManagementModels.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusLearn.Library.UserManagementModels.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("Tutor");
                });
#pragma warning restore 612, 618
        }
    }
}
