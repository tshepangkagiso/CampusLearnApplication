@route = http://localhost:7000
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyIiwiZW1haWwiOiI3ODkwMTJAc3R1ZGVudC5iZWxnaXVtY2FtcHVzLmFjLnphIiwianRpIjoiZGFhMjdhMGQtNDQyYS00YWQzLWI4ODEtZGIxMjg2ZDg5NmY1IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZWlkZW50aWZpZXIiOiIyIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IkphbmUgU21pdGgiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJUdXRvciIsIlVzZXJQcm9maWxlSUQiOiIyIiwiU3R1ZGVudE51bWJlciI6Ijc4OTAxMiIsIlF1YWxpZmljYXRpb24iOiJCQ09NIiwiRnVsbE5hbWUiOiJKYW5lIFNtaXRoIiwiSXNBY3RpdmUiOiJUcnVlIiwiSXNTdHVkZW50IjoiRmFsc2UiLCJJc1R1dG9yIjoiVHJ1ZSIsIklzQWRtaW4iOiJGYWxzZSIsImV4cCI6MTc2MDE1MDMyMCwiaXNzIjoiQ2FtcHVzTGVhcm4uVXNlck1hbmFnZW1lbnQiLCJhdWQiOiJDYW1wdXNMZWFybi5TZXJ2aWNlcyJ9.8T1mt6s1wEI1eQ6VVG4C7ARQuF-IqPDc2mdm6J2yCBA


### Module Subscription Routes:


#### Student subscribes to a module
POST {{route}}/user/subscriptions/module/student/subscribe
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "moduleCode": "PRG171"
}

#### Student unsubscribes from a module
POST {{route}}/user/subscriptions/module/student/unsubscribe
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "moduleCode": "WPR171"
}

#### Get all modules a student is subscribed to
GET {{route}}/user/subscriptions/module/students/subscribed/1
Authorization: Bearer {{token}}

#### Get all students subscribed to a specific module
GET {{route}}/user/subscriptions/module/WPR171/students
Authorization: Bearer {{token}}

### Tutor Subscription Routes

#### Tutor qualifies for a module
POST {{route}}/user/subscriptions/module/tutor/subscribe
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 2,
  "moduleCode": "PRG281"
}

#### Tutor unqualifies from a module
POST {{route}}/user/subscriptions/module/tutor/unsubscribe
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 2,
  "moduleCode": "PRG281"
}

#### Get all modules a tutor is qualified for
GET {{route}}/user/subscriptions/module/tutors/subscribed/2
Authorization: Bearer {{token}}

#### Get all tutors qualified for a specific module
GET {{route}}/user/subscriptions/module/PRG281/tutors
Authorization: Bearer {{token}}





### Database Migration Routes 
###
POST {{route}}/user/migrations/modules
Accept: application/json
Authorization: Bearer {{token}}
Content-Type: application/json
{

}

###
GET {{route}}/user/migrations/migration
Accept: application/json
Authorization: Bearer {{token}}






### Authentication Routes:

### Register a new Student
POST {{route}}/authentication/auth/register
Content-Type: application/json

{
  "name": "John",
  "surname": "Doe", 
  "email": "123456@student.belgiumcampus.ac.za",
  "password": "Password123!",
  "userRole": 0,
  "qualification": 1,
  "studentNumber": 123456
}

### Register a new Tutor
POST {{route}}/authentication/auth/register
Content-Type: application/json

{
  "name": "Jane",
  "surname": "Smith",
  "email": "789012@student.belgiumcampus.ac.za",
  "password": "TutorPass123!",
  "userRole": 1,
  "qualification": 2,
  "studentNumber": 789012
}


### Register a new Admin
POST {{route}}/authentication/auth/register
Content-Type: application/json

{
  "name": "Peter",
  "surname": "Ndoda",
  "email": "80000@student.belgiumcampus.ac.za",
  "password": "AdminPass123!",
  "userRole": 2,
  "qualification": 2,
  "studentNumber": 80000
}

### Login as Student
POST {{route}}/authentication/auth/login
Content-Type: application/json

{
  "email": "123456@student.belgiumcampus.ac.za",
  "password": "Password123!"
}

### Login as Tutor  
POST {{route}}/authentication/auth/login
Content-Type: application/json

{
  "email": "789012@student.belgiumcampus.ac.za",
  "password": "TutorPass123!"
}

### Login as Admin  
POST {{route}}/authentication/auth/login
Content-Type: application/json

{
  "email": "80000@student.belgiumcampus.ac.za",
  "password": "AdminPass123!"
}

### Validate Token (Protected route example)
POST {{route}}/authentication/auth/validate-token
Content-Type: application/json

{
  "token": "{{token}}"
}
