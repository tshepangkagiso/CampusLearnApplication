// <auto-generated />
using System;
using CampusLearn.ForumManagement.API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampusLearn.ForumManagement.API.Database.Migrations
{
    [DbContext(typeof(ForumDbContext))]
    [Migration("20251004010648_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CampusLearn.Library.ForumModels.ForumTopic", b =>
                {
                    b.Property<int>("ForumTopicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ForumTopicID"));

                    b.Property<string>("AnonymousName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForumTopicDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForumTopicTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<string>("RelatedModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TopicCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TopicUpVote")
                        .HasColumnType("int");

                    b.Property<int?>("UserProfileID")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("ForumTopicID");

                    b.HasIndex("IsPinned");

                    b.HasIndex("LastActivity");

                    b.HasIndex("RelatedModuleCode");

                    b.ToTable("ForumTopics");
                });

            modelBuilder.Entity("CampusLearn.Library.ForumModels.ForumTopicResponse", b =>
                {
                    b.Property<int>("ResponseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResponseID"));

                    b.Property<string>("AnonymousName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ForumTopicID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<string>("MediaContentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ResponseCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResponseUpVote")
                        .HasColumnType("int");

                    b.Property<int?>("UserProfileID")
                        .HasColumnType("int");

                    b.HasKey("ResponseID");

                    b.HasIndex("ForumTopicID");

                    b.HasIndex("UserProfileID");

                    b.ToTable("ForumTopicResponses");
                });

            modelBuilder.Entity("CampusLearn.Library.ForumModels.ForumTopicResponse", b =>
                {
                    b.HasOne("CampusLearn.Library.ForumModels.ForumTopic", "ForumTopic")
                        .WithMany("Responses")
                        .HasForeignKey("ForumTopicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ForumTopic");
                });

            modelBuilder.Entity("CampusLearn.Library.ForumModels.ForumTopic", b =>
                {
                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
